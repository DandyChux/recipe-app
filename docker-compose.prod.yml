version: '3'

services:
  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgresDB:/data/postgres
    env_file:
      - ./.env

  pgAdmin:
    image: dpage/pgadmin4
    container_name: pgAdmin
    env_file:
      - ./.env
    ports:
      - "5050:80"

  server:
    image: dandychux/rusty_melody-api
    build:
      context: . # The path to Dockerfile in relation to the docker-compose file
      dockerfile: Dockerfile.server # The name of the Dockerfile
      target: final
    ports:
      - "8000:8000" # Map port 8000 on the host to port 8000 on the container to expose the app
    depends_on:
      - postgres
    # env_file:
    #   - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_EXPIRED_IN: ${JWT_EXPIRED_IN}
      JWT_MAXAGE: ${JWT_MAXAGE}
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}

  client:
    image: dandychux/rusty_melody-client
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - "3000:3000"
    # env_file:
    #   - ./.env
    environment:
      SERVER_URL: ${SERVER_URL}
      CLIENT_URL: ${CLIENT_URL}

volumes:
  postgresDB: